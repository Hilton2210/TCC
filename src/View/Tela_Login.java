package View;

import java.awt.Font;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import java.sql.ResultSet;
import java.sql.Statement;;

public class Tela_Login extends javax.swing.JDialog {

   private Tela_Inicial Tela_Inicial;
    public Tela_Login (java.awt.Frame parent, boolean modal) {
        super(parent, modal);
         this.Tela_Inicial = (Tela_Inicial) parent;
        initComponents();
    }
    private String nomeCompleto = null;

    public String getNomeCompleto() {

        return nomeCompleto;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jButton2 = new javax.swing.JButton();
        Entrar = new javax.swing.JButton();
        senha_ = new javax.swing.JPasswordField();
        log_ = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("FAÇA SEU LOGIN!!");

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Denise/ImagensDoSistema/Imagem/Img de login.png"))); // NOI18N

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Denise/ImagensDoSistema/Ícones/Usuários.png"))); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(java.awt.Color.blue);
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Bem vindo! Informe seu usuário e senha.");

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Denise/ImagensDoSistema/Ícones/Sair.png"))); // NOI18N
        jButton2.setText("CANCELAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jButton2KeyReleased(evt);
            }
        });

        Entrar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        Entrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Denise/ImagensDoSistema/Ícones/Cadastrar.png"))); // NOI18N
        Entrar.setText("ENTRAR");
        Entrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EntrarActionPerformed(evt);
            }
        });
        Entrar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                EntrarKeyReleased(evt);
            }
        });

        jLabel1.setText("Usuário");

        jLabel2.setText("Senha");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(26, 26, 26)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(log_, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(senha_, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                        .addComponent(Entrar, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(log_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(senha_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Entrar)
                        .addComponent(jButton2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton2KeyReleased

    }//GEN-LAST:event_jButton2KeyReleased

    private void EntrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EntrarActionPerformed
String usuario = log_.getText();
        String senha = senha_.getText();
        if (usuario.compareTo("") == 0) {
            JOptionPane.showMessageDialog(null, "Informe o Usuário!", "Atenção!", JOptionPane.INFORMATION_MESSAGE);
            log_.requestFocus();
        } else if (senha.compareTo("") == 0) {
            JOptionPane.showMessageDialog(null, "Informe a Senha!", "Atenção!", JOptionPane.INFORMATION_MESSAGE);
            senha_.requestFocus();
        } else {
            Connection con = null;

            try {
                Class.forName("org.postgresql.Driver");
                con = (Connection) DriverManager.getConnection("jdbc:postgresql://127.0.0.1/TCC", "postgres", "tmsb");
                Statement stm = (Statement) con.createStatement();
                String SQL = "Select * from cadastrarusuario where login = '" + log_.getText() + "';";

                // obter instancia do result set
                ResultSet rs = stm.executeQuery(SQL);

                // verificar se há ao menos um registro
                if (rs.next()) {
                    // agora é só pegar os valores das colunas

                    String loginn = rs.getString("login");
                    String senhaa = rs.getString("senha");
                    //String completo = rs.getString("nome_usuario");
                    if (log_.getText().equals(loginn) && senha_.getText().equals(senhaa)) {
                        // TelaInicial.setNomeCompleto(completo);


                        //                      String todas = completo;



                        this.dispose();
                        return;  // login correto, retorna do método


                    }
                }
                // em caso de usuario OU senha errados
                JOptionPane.showMessageDialog(null, "Usuario ou Senha Inválidos!", "Atenção!", JOptionPane.ERROR_MESSAGE);

            } catch (SQLException e) {
                //   e.printStackTrace(); //vejamos que erro foi gerado e quem o gerou
                JOptionPane.showMessageDialog(null, "Erro na conexão, com o banco de dados!", "Oi. Simples assim!", JOptionPane.WARNING_MESSAGE);
            } catch (ClassNotFoundException e) {
                // e.printStackTrace();
            } finally {
                try {
                    con.close();
                } catch (SQLException onConClose) {
                    //System.out.println("Houve erro no fechamento da conexão");
                    JOptionPane.showMessageDialog(null, "Erro na conexão, com o banco de dados!", "Oi. Simples assim!", JOptionPane.WARNING_MESSAGE);
                    //onConClose.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_EntrarActionPerformed

    private void EntrarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EntrarKeyReleased
//ação realizada pelo botão enter

        if (evt.getKeyCode() == KeyEvent.VK_ENTER){

            String usuario = log_.getText();
            String senha = senha_.getText();
            if (usuario.compareTo("") == 0) {
                JOptionPane.showMessageDialog(null, "Informe o Usuário!", "Atenção!", JOptionPane.INFORMATION_MESSAGE);
                log_.requestFocus();
            } else if (senha.compareTo("") == 0) {
                JOptionPane.showMessageDialog(null, "Informe a Senha!", "Atenção!", JOptionPane.INFORMATION_MESSAGE);
                senha_.requestFocus();
            } else {
                Connection con = null;

                try {
                    Class.forName("org.postgresql.Driver");
                    con = (Connection) DriverManager.getConnection("jdbc:postgresql://127.0.0.1/TCC", "postgres", "tmsb");
                    Statement stm = (Statement) con.createStatement();
                    String SQL = "Select * from cadastrarusuario where login = '" + log_.getText() + "';";

                    // obter instancia do result set
                    ResultSet rs = stm.executeQuery(SQL);

                    // verificar se há ao menos um registro
                    if (rs.next()) {
                        // agora é só pegar os valores das colunas

                        String loginn = rs.getString("login");
                        String senhaa = rs.getString("senha");
                        //String completo = rs.getString("nome_usuario");
                        if (log_.getText().equals(loginn) && senha_.getText().equals(senhaa)) {
                            // TelaInicial.setNomeCompleto(completo);


                            //                      String todas = completo;



                            this.dispose();
                            return;  // login correto, retorna do método


                        }
                    }
                    // em caso de usuario OU senha errados
                    JOptionPane.showMessageDialog(null, "Usuario ou Senha Inválidos!", "Atenção!", JOptionPane.ERROR_MESSAGE);

                } catch (SQLException e) {
                    //   e.printStackTrace(); //vejamos que erro foi gerado e quem o gerou
                    JOptionPane.showMessageDialog(null, "Erro na conexão, com o banco de dados!", "Oi. Simples assim!", JOptionPane.WARNING_MESSAGE);
                } catch (ClassNotFoundException e) {
                    // e.printStackTrace();
                } finally {
                    try {
                        con.close();
                    } catch (SQLException onConClose) {
                        //System.out.println("Houve erro no fechamento da conexão");
                        JOptionPane.showMessageDialog(null, "Erro na conexão, com o banco de dados!", "Oi. Simples assim!", JOptionPane.WARNING_MESSAGE);
                        //onConClose.printStackTrace();
                    }
                }
            }

        }
    }//GEN-LAST:event_EntrarKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
             java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Tela_Login dialog = new Tela_Login (new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Entrar;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField log_;
    private javax.swing.JPasswordField senha_;
    // End of variables declaration//GEN-END:variables
}
